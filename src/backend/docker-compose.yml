services:
    # MySQL Service
    db:
        image: mysql:latest
        container_name: geoprofs-lars-db
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        ports:
            - "3306:3306"
        volumes:
            - mysql_data:/var/lib/mysql
        networks:
            - laravel_network

    # Test MySQL Service
    db_test:
        image: mysql:latest
        container_name: geoprofs-lars-db_test
        environment:
            MYSQL_ROOT_PASSWORD: R8+@hkBe
            MYSQL_DATABASE: geoprofs_lars_db_test
            MYSQL_USER: geoprofs_lars_user_test
            MYSQL_PASSWORD: B2+;5)cK
        ports:
            - "3308:3306"
        volumes:
            - mysql_test_data:/var/lib/mysql
        networks:
            - laravel_network

    # Laravel/PHP Service
    backend:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: geoprofs-lars-backend
        ports:
            - "8080:8000"
        develop:
            watch:
            - action: sync
              path: ./back-end
              target: /var/www/html

        depends_on:
            - db
        networks:
            - laravel_network

networks:
    laravel_network:
        driver: bridge

volumes:
    mysql_data:
    mysql_test_data:
