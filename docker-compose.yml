services:
    # MySQL Service (Development)
    db:
        image: mysql:latest
        container_name: geoprofs-lars-db
        env_file:
            - ./src/backend/.env
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        ports:
            - "3306:3306"
        volumes:
            - mysql_data:/var/lib/mysql
        networks:
            - laravel_network

    # MySQL Service (Testing)
    db_test:
        image: mysql:latest
        container_name: geoprofs-lars-db_test
        env_file:
            - ./src/backend/.env.testing
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        ports:
            - "3308:3306"
        volumes:
            - mysql_test_data:/var/lib/mysql
        networks:
            - laravel_network

    # Laravel/PHP Service
    backend:
        build:
            context: ./src/backend
            dockerfile: Dockerfile
        container_name: geoprofs-lars-backend
        ports:
            - "8080:8000"
        volumes:
            - ./src/backend:/var/www/html:cached
        depends_on:
            - db
            - db_test
        networks:
            - laravel_network

networks:
    laravel_network:
        driver: bridge

volumes:
    mysql_data:
    mysql_test_data:
